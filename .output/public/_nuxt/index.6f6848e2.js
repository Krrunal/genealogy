import{h as N,s as d,z as P,t as W,a as E,i as L}from"./text.2058c26f.js";import{t as T}from"./tree.65d50c14.js";const Y="down",B="up",w="right",C="left",_="M",x="F";/**
 * The orientation base class.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class m{constructor(t,e){this._boxWidth=t,this._boxHeight=e,this._imagePadding=5,this._imageRadius=Math.min(40,this._boxHeight/2-this._imagePadding),this._cornerRadius=20}get boxWidth(){return this._boxWidth}get boxHeight(){return this._boxHeight}cornerRadius(){return this._cornerRadius}imageRadius(){return this._imageRadius}}function y(o,t){let e=t.x(o.source),r=t.y(o.source)+t.direction()*(t.boxHeight/2),i=t.x(o.target),s=t.y(o.target)-t.direction()*(t.boxHeight/2);return"M "+e+" "+r+" V "+(r+(s-r)/2)+" H "+i+" V "+s}/**
 * This class handles the orientation of the tree.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class H extends m{constructor(t,e){super(t,e),this._splittNames=!0}direction(){return 1}nodeWidth(){return this._boxWidth*2+30}imageCornerRadius(){return this.cornerRadius()-this._imagePadding}imageX(){return-(this._boxWidth/2)+this._imagePadding}imageY(){return-(this._boxHeight/2)+this._imagePadding}imageWidth(){return this._boxWidth-this._imagePadding*2}imageHeight(){return this.imageRadius()*2}textX(){return-(this._boxWidth/2)+this.imageRadius()*2+20-this._imagePadding}textY(){return this.imageY()+this.imageHeight()+20}textWidth(){return this.imageWidth()}norm(t){t.y=this.direction()*t.depth*(this._boxHeight+30)}elbow(t){return y(t,this)}x(t){return t.x}y(t){return t.y}}/**
 * This class handles the orientation of the tree.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class k extends m{constructor(t,e){super(t,e),this._splittNames=!0}direction(){return-1}nodeWidth(){return this._boxWidth*2+30}imageCornerRadius(){return this.cornerRadius()-this._imagePadding}imageX(){return-(this._boxWidth/2)+this._imagePadding}imageY(){return-(this._boxHeight/2)+this._imagePadding}imageWidth(){return this._boxWidth-this._imagePadding*2}imageHeight(){return this.imageRadius()*2}textX(){return-(this._boxWidth/2)+this.imageRadius()*2+20-this._imagePadding}textY(){return this.imageY()+this.imageHeight()+20}textWidth(){return this.imageWidth()}norm(t){t.y=this.direction()*t.depth*(this._boxHeight+30)}elbow(t){return y(t,this)}x(t){return t.x}y(t){return t.y}}function b(o,t){let e=t.y(o.source),r=t.x(o.source)+t.direction()*(t.boxWidth/2),i=t.y(o.target),s=t.x(o.target)-t.direction()*(t.boxWidth/2);return"M "+r+" "+e+" H "+(r+(s-r)/2)+" V "+i+" H "+s}/**
 * This class handles the orientation of the tree.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class O extends m{constructor(t,e){super(t,e),this._splittNames=!1}direction(){return 1}nodeWidth(){return this._boxHeight*2+30}imageCornerRadius(){return this.cornerRadius()-this._imagePadding}imageX(){return-(this._boxWidth/2)+this._imagePadding}imageY(){return-this.imageRadius()}imageWidth(){return this.imageRadius()*2}imageHeight(){return this.imageRadius()*2}textX(){return-(this._boxWidth/2)+this.imageRadius()*2+20-this._imagePadding}textY(){return-15}textWidth(){return this._boxWidth-(this.imageRadius()*2+15+this._imagePadding)-15*2}norm(t){t.y=this.direction()*t.depth*(this._boxWidth+30)}elbow(t){return b(t,this)}x(t){return t.y}y(t){return t.x}}/**
 * This class handles the orientation of the tree.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class X extends m{constructor(t,e){super(t,e),this._splittNames=!1}direction(){return-1}nodeWidth(){return this._boxHeight*2+30}imageCornerRadius(){return this.cornerRadius()-this._imagePadding}imageX(){return-(this._boxWidth/2)+this._imagePadding}imageY(){return-this.imageRadius()}imageWidth(){return this.imageRadius()*2}imageHeight(){return this.imageRadius()*2}textX(){return-(this._boxWidth/2)+this.imageRadius()*2+20-this._imagePadding}textY(){return-15}textWidth(){return this._boxWidth-(this.imageRadius()*2+15+this._imagePadding)-15*2}norm(t){t.y=this.direction()*t.depth*(this._boxWidth+30)}elbow(t){return b(t,this)}x(t){return t.y}y(t){return t.x}}/**
 * This class handles the orientation of the tree.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class M{constructor(){this._orientations={[Y]:new H(150,175),[B]:new k(150,175),[w]:new O(300,80),[C]:new X(300,80)}}get(){return this._orientations}}/**
 * This class handles the configuration of the application.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class S{constructor(t,e=4,r="rgb(240, 240, 240)",i="rgb(0, 0, 0)",s=!1,a=w,n=!1,h=1){this._treeLayout=a,this._orientations=new M,this.duration=750,this.padding=15,this.imagePadding=5,this._generations=e,this.textPadding=8,this.defaultColor=r,this._fontSize=14,this.fontColor=i,this._showEmptyBoxes=s,this.rtl=n,this.labels=t,this.direction=h}get generations(){return this._generations}set generations(t){this._generations=t}get showEmptyBoxes(){return this._showEmptyBoxes}set showEmptyBoxes(t){this._showEmptyBoxes=t}get treeLayout(){return this._treeLayout}set treeLayout(t){this._treeLayout=t}get orientation(){return this._orientations.get()[this.treeLayout]}}/**
 * This class handles the hierarchical data.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class z{constructor(t){this._configuration=t,this._nodes=null,this._root=null,this.nodeWidth=this._configuration.orientation.nodeWidth(),this.nodeHeight=0,this.separation=.5}init(t){const e=({parents:a})=>1+(a?Math.max(...a.map(e)):0),r=e(t);let i=N(t,a=>(this._configuration.showEmptyBoxes&&(!a.parents&&a.generation<r&&(a.parents=[this.createEmptyNode(a.generation+1,_),this.createEmptyNode(a.generation+1,x)]),a.parents&&a.parents.length<2&&(a.parents[0].sex===_?a.parents.push(this.createEmptyNode(a.generation+1,x)):a.parents.unshift(this.createEmptyNode(a.generation+1,_)))),a.parents));const s=T().nodeSize([this.nodeWidth,this.nodeHeight]).separation(a=>this.separation);this._root=i,this._nodes=s(i)}get nodes(){return this._nodes}get root(){return this._root}createEmptyNode(t,e){return{id:0,xref:"",url:"",updateUrl:"",generation:t,name:"",firstNames:[],lastNames:[],preferredName:"",alternativeNames:[],isAltRtl:!1,sex:e,timespan:"",color:this._configuration.defaultColor,colors:[[],[]]}}}function I(o,t){return fetch(o,t).then(e=>e.blob()).then(e=>new Promise((r,i)=>{const s=new FileReader;s.onloadend=()=>r(s.result),s.onerror=i,s.readAsDataURL(e)}))}/**
 * The class handles the creation of the tree.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class A{constructor(t,e,r){this._svg=t,this._configuration=e,this._hierarchy=r,this._hierarchy.root.x0=0,this._hierarchy.root.y0=0,this._orientation=this._configuration.orientation,this.draw(this._hierarchy.root)}draw(t){let e=this._hierarchy.nodes.descendants(),r=this._hierarchy.nodes.links();e.forEach(i=>{this._orientation.norm(i)}),this.drawLinks(r,t),this.drawNodes(e,t),e.forEach(i=>{i.x0=i.x,i.y0=i.y})}drawNodes(t,e){let r=0,i=this;this._svg.defs.get().append("clipPath").attr("id","clip-rect").append("rect").attr("rx",i._orientation.imageCornerRadius()).attr("ry",i._orientation.imageCornerRadius()).attr("x",i._orientation.imageX()).attr("y",i._orientation.imageY()).attr("width",i._orientation.imageWidth()).attr("height",i._orientation.imageHeight()),this._svg.visual.transition().duration(this._configuration.duration);let a=this._svg.visual.selectAll("g.person").data(t,n=>n.id||(n.id=++r)).enter().append("g").attr("class","person").attr("transform",n=>"translate("+this._orientation.x(n)+","+this._orientation.y(n)+")");a.append("rect").attr("class",n=>n.data.sex===x?"female":n.data.sex===_?"male":"unknown").attr("rx",this._orientation.cornerRadius()).attr("ry",this._orientation.cornerRadius()).attr("x",-(this._orientation.boxWidth/2)).attr("y",-(this._orientation.boxHeight/2)).attr("width",this._orientation.boxWidth).attr("height",this._orientation.boxHeight).attr("fill-opacity",.5).attr("fill",n=>n.data.color),a.filter(n=>n.data.xref!=="").each(function(n){let h=d(this);h.append("title").text(l=>l.data.name);let c=h.append("g").attr("class","image");c.append("rect").attr("rx",i._orientation.imageCornerRadius()).attr("ry",i._orientation.imageCornerRadius()).attr("x",i._orientation.imageX()).attr("y",i._orientation.imageY()).attr("width",i._orientation.imageWidth()).attr("height",i._orientation.imageHeight()).attr("fill","rgb(255, 255, 255)");let g=c.append("image").attr("x",i._orientation.imageX()).attr("y",i._orientation.imageY()).attr("width",i._orientation.imageWidth()).attr("height",i._orientation.imageHeight()).attr("clip-path","url(#clip-rect)");I(i.getImageToLoad(n)).then(l=>g.attr("xlink:href",l)).catch(l=>{console.error(l)}),c.append("rect").attr("rx",i._orientation.imageCornerRadius()).attr("ry",i._orientation.imageCornerRadius()).attr("x",i._orientation.imageX()).attr("y",i._orientation.imageY()).attr("width",i._orientation.imageWidth()).attr("height",i._orientation.imageHeight()).attr("fill","none").attr("stroke","rgb(200, 200, 200)").attr("stroke-width",1.5),i.addNames(h,n),i.addDates(h,n)})}togglePerson(t,e){e.parents?(e._parents=e.parents,e.parents=null):(e.parents=e._parents,e._parents=null),this.draw(e)}collapse(t){t.parents&&(t._parents=t.parents,t._parents.forEach(e=>this.collapse(e)),t.parents=null)}addFirstNames(t,e){let r=0;for(let i of e.data.firstNames){let s=t.append("tspan").text(i);i===e.data.preferredName&&s.attr("class","preferred"),r!==0&&s.attr("dx","0.25em"),++r}}addLastNames(t,e,r=0){let i=0;for(let s of e.data.lastNames){let a=t.append("tspan").attr("class","lastName").text(s);i!==0&&a.attr("dx","0.25em"),r!==0&&a.attr("dx",r+"em"),++i}}truncateNames(t,e=!1){let r=this._orientation.textWidth();this.truncateListOfNames(t.selectAll("tspan:not(.preferred):not(.lastName)"),t,r,e),t.selectAll("tspan.preferred").each(this.truncateText(t,r,e)),t.selectAll("tspan.lastName").each(this.truncateText(t,r,e))}truncateListOfNames(t,e,r,i){t.size()&&t.nodes().reverse().forEach(s=>{d(s).each(this.truncateText(e,r,i))})}truncateText(t,e,r=!1){let i=this;return function(){let s=i.getTextLength(t),a=d(this),n=a.text();s>e&&(r?a.text(""):n.length>1&&a.text(n.slice(0,1)+"."))}}getTextLength(t){let e=0;return t.selectAll("tspan").each(function(){e+=this.getComputedTextLength()}),e}addNames(t,e){let r=t.append("g").attr("class","name");if(this._orientation._splittNames){let i=r.append("text").attr("text-anchor","middle").attr("alignment-baseline","central").attr("dy",this._orientation.textY()),s=r.append("text").attr("text-anchor","middle").attr("alignment-baseline","central").attr("dy",this._orientation.textY()+20);this.addFirstNames(i,e),this.addLastNames(s,e),this.truncateNames(i),this.truncateNames(s)}else{let i=r.append("text").attr("text-anchor","start").attr("dx",this._orientation.textX()).attr("dy",this._orientation.textY());this.addFirstNames(i,e),this.addLastNames(i,e,.25),this.truncateNames(i)}}addDates(t,e){let r=t.append("g").attr("class","table");if(this._orientation._splittNames){r.append("text").attr("class","date").attr("text-anchor","middle").attr("alignment-baseline","central").attr("dy",this._orientation.textY()+50).append("tspan").text(e.data.timespan);return}let i=r.append("text").attr("class","date").attr("text-anchor","middle").attr("dominant-baseline","middle").attr("x",this._orientation.textX()).attr("y",this._orientation.textY()+15);if(e.data.birth&&i.append("tspan").text("★").attr("x",this._orientation.textX()+5).attr("dy",this._orientation.textY()+20),e.data.death){let a=i.append("tspan").text("†");e.data.birth?a.attr("x",this._orientation.textX()+5).attr("dy",this._orientation.textY()+35):a.attr("x",this._orientation.textX()+5).attr("dy",this._orientation.textY()+20)}let s=r.append("text").attr("class","date").attr("text-anchor","start").attr("dominant-baseline","middle").attr("x",this._orientation.textX()).attr("y",this._orientation.textY()+20);if(e.data.birth&&s.append("tspan").text(e.data.birth).attr("x",this._orientation.textX()+15).attr("dy",this._orientation.textY()+15),e.data.death){let a=s.append("tspan").text(e.data.death);e.data.birth?a.attr("x",this._orientation.textX()+15).attr("dy",this._orientation.textY()+35):a.attr("x",this._orientation.textX()+15).attr("dy",this._orientation.textY()+15)}}getImageToLoad(t){return t.data.thumbnail?t.data.thumbnail:""}drawLinks(t,e){this._svg.visual.selectAll("path.link").data(t,i=>i.target.id).enter().append("path").classed("link",!0).attr("d",i=>this._orientation.elbow(i))}}/**
 * This class handles the tooltip overlay.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class U{constructor(t){this._element=t.append("div").attr("class","overlay").style("opacity",1e-6)}show(t,e=0,r=null){this._element.select("p").remove(),this._element.append("p").attr("class","tooltip").text(t),this._element.transition().duration(e).style("opacity",1).on("end",()=>{typeof r=="function"&&r()})}hide(t=0,e=0){this._element.transition().delay(t).duration(e).style("opacity",1e-6)}get(){return this._element}}/**
 * SVG definition class
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class D{constructor(t){this._element=t.append("defs")}get(){return this._element}}const p=.1,f=20;/**
 * This class handles the zoom.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class F{constructor(t){this._zoom=null,this._parent=t,this.init()}init(){this._zoom=P(),this._zoom.scaleExtent([p,f]).on("zoom",t=>{t.sourceEvent&&t.sourceEvent.type==="touchmove"&&t.sourceEvent.touches.length<2||this._parent.attr("transform",t.transform)}),this._zoom.wheelDelta(t=>-t.deltaY*(t.deltaMode===1?.05:t.deltaMode?1:.002)),this._zoom.filter(t=>{if(t.type==="wheel"){if(!t.ctrlKey)return!1;var e=W(this);return e.k&&(e.k<=p&&t.deltaY>0||e.k>=f&&t.deltaY<0)?(t.preventDefault(),!1):!0}return!t.button&&t.type==="touchmove"?t.touches.length===2:(!t.ctrlKey||t.type==="wheel")&&!t.button})}get(){return this._zoom}}/**
 * Base export class.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class v{triggerDownload(t,e){let r=new MouseEvent("click",{view:window,bubbles:!1,cancelable:!0}),i=document.createElement("a");i.setAttribute("download",e),i.setAttribute("href",t),i.setAttribute("target","_blank"),i.dispatchEvent(r)}}/**
 * Export the chart as PNG image.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class G extends v{copyStylesInline(t,e){return new Promise(r=>{let i=["svg","g","text","textPath"];for(let s=0;s<e.childNodes.length;++s){let a=e.childNodes[s];if(i.indexOf(a.tagName)!==-1){this.copyStylesInline(t.childNodes[s],a);continue}let n=window.getComputedStyle(t.childNodes[s]);if(n!==null)for(let h=0;h<n.length;++h)a.style.setProperty(n[h],n.getPropertyValue(n[h]))}r(e)})}calculateViewBox(t){const e=t.getBBox(),r=50;return[e.x-r,e.y-r,e.width+r*2,e.height+r*2]}createCanvas(t,e){let r=document.createElement("canvas");return r.width=t,r.height=e,r}convertToDataUrl(t,e,r){return new Promise(i=>{let s=new XMLSerializer().serializeToString(t),a=window.URL||window.webkitURL||window,n=new Blob([s],{type:"image/svg+xml;charset=utf-8"}),h=a.createObjectURL(n),c=new Image;c.onload=()=>{let g=this.createCanvas(e,r),l=g.getContext("2d");l.fillStyle="rgb(255,255,255)",l.fillRect(0,0,g.width,g.height),l.drawImage(c,0,0),a.revokeObjectURL(h);let R=g.toDataURL("image/png").replace("image/png","image/octet-stream");i(R)},c.src=h})}cloneSvg(t){return new Promise(e=>{let r=t.cloneNode(!0);e(r)})}svgToImage(t,e){this.cloneSvg(t.get().node()).then(r=>{this.copyStylesInline(t.get().node(),r);const i=this.calculateViewBox(t.get().node()),s=i[2],a=i[3];r.setAttribute("width",s),r.setAttribute("height",a),r.setAttribute("viewBox",i),this.convertToDataUrl(r,s,a).then(n=>this.triggerDownload(n,e)).catch(()=>{console.log("Failed to save chart as PNG image")})})}}/**
 * Export the chart as raw SVG image.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class V extends v{copyStylesInline(t,e){return new Promise(r=>{E(t).then(i=>{i=i.replace(/#webtrees-pedigree-chart-container /g,"");let s=document.createElementNS("http://www.w3.org/2000/svg","style");s.appendChild(document.createTextNode(i)),e.prepend(s),r(e)})})}convertToObjectUrl(t){return new Promise(e=>{let r=new XMLSerializer().serializeToString(t),i=window.URL||window.webkitURL||window,s=new Blob([r],{type:"image/svg+xml;charset=utf-8"}),a=i.createObjectURL(s),n=new Image;n.onload=()=>{e(a)},n.src=a})}cloneSvg(t){return new Promise(e=>{let r=t.cloneNode(!0);e(r)})}svgToImage(t,e,r){this.cloneSvg(t.get().node()).then(i=>this.copyStylesInline(e,i)).then(i=>this.convertToObjectUrl(i)).then(i=>this.triggerDownload(i,r)).catch(()=>{console.log("Failed to save chart as SVG image")})}}/**
 * The file export factory.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class j{constructor(){this._exportClass=null}setExportClass(t){switch(t){case"png":this._exportClass=G;break;case"svg":this._exportClass=V;break}}createExport(t){switch(this.setExportClass(t),t){case"png":return new this._exportClass;case"svg":return new this._exportClass}}}/**
 * SVG class
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class K{constructor(t,e){this._element=t.append("svg"),this._defs=new D(this._element),this._visual=null,this._zoom=null,this._configuration=e,this.init()}init(){this._element.attr("width","100%").attr("height","100%").attr("text-rendering","geometricPrecision").attr("text-anchor","middle").attr("xmlns:xlink","https://www.w3.org/1999/xlink")}initEvents(t){this._element.on("contextmenu",e=>e.preventDefault()).on("wheel",e=>{e.ctrlKey||t.show(this._configuration.labels.zoom,300,()=>{t.hide(700,800)})}).on("touchend",e=>{e.touches.length<2&&t.hide(0,800)}).on("touchmove",e=>{e.touches.length>=2?t.hide():t.show(this._configuration.labels.move)}).on("click",e=>this.doStopPropagation(e),!0),this._configuration.rtl&&this._element.classed("rtl",!0),this._visual=this._element.append("g"),this._zoom=new F(this._visual),this._element.call(this._zoom.get())}doStopPropagation(t){t.defaultPrevented&&t.stopPropagation()}export(t){return new j().createExport(t)}get defs(){return this._defs}get zoom(){return this._zoom}get visual(){return this._visual}get(){return this._element}}const Z=300,u=10;/**
 * This class handles the overall chart creation.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class q{constructor(t,e){this._configuration=e,this._parent=t,this._hierarchy=new z(this._configuration),this._data={}}get svg(){return this._svg}updateViewBox(){let t=this._svg.visual.node().getBBox(),e=this._parent.node().getBoundingClientRect(),r=Math.max(e.width,t.width),i=Math.max(e.height,t.height,Z),s=(r-t.width)/2,a=(i-t.height)/2,n=Math.ceil(t.x-s-u),h=Math.ceil(t.y-a-u);r=Math.ceil(r+u*2),i=Math.ceil(i+u*2),this._svg.get().attr("viewBox",[n,h,r,i])}get data(){return this._data}set data(t){this._data=t,this._hierarchy.init(this._data)}draw(){this._parent.html(""),this._svg=new K(this._parent,this._configuration),this._overlay=new U(this._parent),this._svg.initEvents(this._overlay),new A(this._svg,this._configuration,this._hierarchy),this.bindClickEventListener(),this.updateViewBox()}bindClickEventListener(){var t=this;this._svg.visual.selectAll("g.person").filter(e=>e.data.xref!=="").each(function(e){d(this).on("click",function(){t.personClick(e.data)})})}personClick(t){t.generation===1?this.redirectToIndividual(t.url):this.update(t.updateUrl)}redirectToIndividual(t){window.location=t}update(t){window.location=t}}/**
 * The application class.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-pedigree-chart/
 */class ${constructor(t,e){this._selector=t,this._parent=d(this._selector),this._configuration=new S(e.labels,e.generations,e.defaultColor,e.fontColor,e.showEmptyBoxes,e.treeLayout,e.rtl),this._chart=new q(this._parent,this._configuration),this.init()}init(){d("#centerButton").on("click",()=>this.center()),d("#exportPNG").on("click",()=>this.exportPNG()),d("#exportSVG").on("click",()=>this.exportSVG())}center(){this._chart.svg.get().transition().duration(750).call(this._chart.svg.zoom.get().transform,L)}get configuration(){return this._configuration}set cssFile(t){this._cssFile=t}update(t){this._chart.update(t)}draw(t){this._chart.data=t,this._chart.draw()}exportPNG(){this._chart.svg.export("png").svgToImage(this._chart.svg,"pedigree-chart.png")}exportSVG(){this._chart.svg.export("svg").svgToImage(this._chart.svg,this._cssFile,"pedigree-chart.svg")}}export{$ as P};
