const i=["filters","intervals","params"],a={name:"FilterState",props:{apiVersion:{type:Number,required:!0},filters:{type:Object,default:null},intervals:{type:Object,default:null},name:{type:String,required:!0},params:{type:Object,default:null}},emits:["ready","state-updated"],data:()=>({defaultFilters:null,defaultIntervals:null,defaultParams:null,state:null,keys:null,ready:!1}),computed:{dirty(){return this.defaultFilters!==this.stringify(this.filters)||this.defaultIntervals!==this.stringify(this.intervals)||this.defaultParams!==this.stringify(this.params)}},watch:{state:{handler:"persist",deep:!0},dirty:{handler(t){this.$emit("state-updated",t)},immediate:!0}},created(){this.init(),this.load(),this.ready=!0},methods:{init(){this.defaultFilters=this.stringify(this.filters),this.defaultIntervals=this.stringify(this.intervals),this.defaultParams=this.stringify(this.params),this.keys=i.filter(t=>!!this[t]),this.state={apiVersion:this.apiVersion},this.keys.forEach(t=>this.state[t]=this[t])},load(){const t=JSON.parse(localStorage.getItem(this.name));t&&t.apiVersion===this.state.apiVersion&&this.keys.forEach(e=>this.fill(this.state[e],t[e])),this.persist(),this.$emit("ready")},fill(t,e){Object.keys(t).forEach(s=>{t[s]&&typeof t[s]=="object"&&!Array.isArray(t[s])?this.fill(t[s],e[s]):t[s]=e[s]})},persist(){this.ready&&localStorage.setItem(this.name,JSON.stringify(this.state))},reset(){localStorage.removeItem(this.name),this.keys.forEach(t=>this.fill(this[t],this.default(t)))},default(t){return t=`default${t.charAt(0).toUpperCase()}${t.slice(1)}`,JSON.parse(this[t])},stringify(t){return t?JSON.stringify(t):null}},render(){return this.$slots.default}};export{a as _};
