import{h as T,z as I,t as M,a as k,s as h,b as L,c as O,i as B}from"./text.2058c26f.js";import{p as G,l as E,a as w,j as z}from"./json.3f897cba.js";import{a as F,bx as H,r as A,o as U,b as V,h as x,e as N}from"./entry.92cc3846.js";import{L as j}from"./index.44e8f268.js";/* empty css              */import{c as P,g as $,a as W}from"./personHelper.48677703.js";import"./vue.runtime.esm-bundler.08aa84eb.js";/**
 * This class handles the configuration of the application.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class Y{constructor(t,e=6,i=210,s="rgb(238, 238, 238)",r=100,n="rgb(0, 0, 0)",a=!1,o=!1,c=!1,d=!1,u=6){this._generations=e,this.circlePadding=0,c&&(this.circlePadding=40),this.padAngle=.03,this.padRadius=this.circlePadding*10,this.padDistance=this.padAngle*this.padRadius,this.cornerRadius=0,this._numberOfInnerCircles=u,this.centerCircleRadius=85,this.innerArcHeight=85,this.outerArcHeight=110,c&&(this.innerArcHeight=this.circlePadding+110,this.outerArcHeight=this.circlePadding+110),this.colorArcWidth=5,this.textPadding=8,this.defaultColor=s,this._fontSize=15,this._fontScale=r,this.fontColor=n,this._hideEmptySegments=a,this._showColorGradients=o,this._showParentMarriageDates=c,this.updateDuration=1250,this._fanDegree=i,this.rtl=d,this.labels=t,this.id=(()=>{let g=1;return function(f=!1){return f&&(g=0),g++}})()}get generations(){return this._generations}set generations(t){this._generations=t}get fanDegree(){return this._fanDegree}set fanDegree(t){this._fanDegree=t}get fontScale(){return this._fontScale}set fontScale(t){this._fontScale=t}get hideEmptySegments(){return this._hideEmptySegments}set hideEmptySegments(t){this._hideEmptySegments=t}get showColorGradients(){return this._showColorGradients}set showColorGradients(t){this._showColorGradients=t}get showParentMarriageDates(){return this._showParentMarriageDates}set showParentMarriageDates(t){this._showParentMarriageDates=t}get numberOfInnerCircles(){return this._numberOfInnerCircles}set numberOfInnerCircles(t){this._numberOfInnerCircles=t}get fontSize(){return this._fontSize}}const _="M",v="F";/**
 * This class handles the hierarchical data.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class X{constructor(t){console.log(t,"configuration"),this._configuration=t,this._nodes=null}init(t){let e=T(t,s=>(!s.children&&s.generation<this._configuration.generations&&(s.children=[this.createEmptyNode(s.generation+1,_),this.createEmptyNode(s.generation+1,v)]),s.children&&s.children.length<2&&(s.children[0].sex===_?s.children.push(this.createEmptyNode(s.generation+1,v)):s.children.unshift(this.createEmptyNode(s.generation+1,_))),s.children)).count(),i=G();this._nodes=i(e).descendants(),this._nodes.forEach(s=>{s.data.id=this._configuration.id()}),this._configuration.id(!0)}get nodes(){return this._nodes}createEmptyNode(t,e){return{id:0,xref:"",url:"",updateUrl:"",generation:t,name:"",firstNames:[],lastNames:[],preferredName:"",alternativeNames:[],isAltRtl:!1,sex:e,timespan:"",color:this._configuration.defaultColor,colors:[[],[]]}}}/**
 * This class handles the tooltip overlay.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class K{constructor(t){this._element=t.append("div").attr("class","overlay").style("opacity",1e-6)}show(t,e=0,i=null){this._element.select("p").remove(),this._element.append("p").attr("class","tooltip").text(t),this._element.transition().duration(e).style("opacity",1).on("end",()=>{typeof i=="function"&&i()})}hide(t=0,e=0){this._element.transition().delay(t).duration(e).style("opacity",1e-6)}get(){return this._element}}/**
 * SVG definition class
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class Z{constructor(t){this._element=t.append("defs")}get(){return this._element}}const D=.5,C=5;/**
 * This class handles the zoom.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class q{constructor(t){this._zoom=null,this._parent=t,this.init()}init(){this._zoom=I(),this._zoom.scaleExtent([D,C]).on("zoom",t=>{t.sourceEvent&&t.sourceEvent.type==="touchmove"&&t.sourceEvent.touches.length<2||this._parent.attr("transform",t.transform)}),this._zoom.wheelDelta(t=>-t.deltaY*(t.deltaMode===1?.05:t.deltaMode?1:.002)),this._zoom.filter(t=>{if(t.type==="wheel"){if(!t.ctrlKey)return!1;var e=M(this);return e.k&&(e.k<=D&&t.deltaY>0||e.k>=C&&t.deltaY<0)?(t.preventDefault(),!1):!0}return!t.button&&t.type==="touchmove"?t.touches.length===2:(!t.ctrlKey||t.type==="wheel")&&!t.button})}get(){return this._zoom}}/**
 * Filter definition class
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class J{constructor(t){this._element=t,this._element.append("filter").attr("id","drop-shadow").append("feDropShadow").attr("stdDeviation","7 7").attr("dx","0").attr("dy","0").attr("flood-opacity","0.3").attr("flood-color","rgb(0,0,0)")}get(){return this._element}}/**
 * Base export class.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class R{triggerDownload(t,e){let i=new MouseEvent("click",{view:window,bubbles:!1,cancelable:!0}),s=document.createElement("a");s.setAttribute("download",e),s.setAttribute("href",t),s.setAttribute("target","_blank"),s.dispatchEvent(i)}}/**
 * Export the chart as PNG image.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class Q extends R{copyStylesInline(t,e){let i=["svg","g","text","textPath"];for(let s=0;s<e.childNodes.length;++s){let r=e.childNodes[s];if(i.indexOf(r.tagName)!==-1){this.copyStylesInline(t.childNodes[s],r);continue}let n=window.getComputedStyle(t.childNodes[s]);if(n!==null)for(let a=0;a<n.length;++a)r.style.setProperty(n[a],n.getPropertyValue(n[a]))}}calculateViewBox(t){const e=t.getBBox(),i=50;return[e.x-i,e.y-i,e.width+i*2,e.height+i*2]}createCanvas(t,e){let i=document.createElement("canvas");return i.width=t,i.height=e,i}convertToDataUrl(t,e,i){return new Promise(s=>{let r=new XMLSerializer().serializeToString(t),n=window.URL||window.webkitURL||window,a=new Blob([r],{type:"image/svg+xml;charset=utf-8"}),o=n.createObjectURL(a),c=new Image;c.onload=()=>{let d=this.createCanvas(e,i),u=d.getContext("2d");u.fillStyle="rgb(255,255,255)",u.fillRect(0,0,d.width,d.height),u.drawImage(c,0,0),n.revokeObjectURL(o);let g=d.toDataURL("image/png").replace("image/png","image/octet-stream");s(g)},c.src=o})}cloneSvg(t){return new Promise(e=>{let i=t.cloneNode(!0);e(i)})}svgToImage(t,e){const i={A3:[4960,3508],A4:[3508,2480],A5:[2480,1748]};this.cloneSvg(t.get().node()).then(s=>{this.copyStylesInline(t.get().node(),s);const r=this.calculateViewBox(t.get().node()),n=Math.max(i.A4[0],r[2]),a=Math.max(i.A4[1],r[3]);s.setAttribute("width",n),s.setAttribute("height",a),s.setAttribute("viewBox",r),this.convertToDataUrl(s,n,a).then(o=>this.triggerDownload(o,e)).catch(()=>{console.log("Failed to save chart as PNG image")})})}}/**
 * Export the chart as raw SVG image.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class tt extends R{copyStylesInline(t,e){return new Promise(i=>{k(t).then(s=>{s=s.replace(/#webtrees-fan-chart-container /g,"");let r=document.createElementNS("http://www.w3.org/2000/svg","style");r.appendChild(document.createTextNode(s)),e.prepend(r),i(e)})})}convertToObjectUrl(t){return new Promise(e=>{let i=new XMLSerializer().serializeToString(t),s=window.URL||window.webkitURL||window,r=new Blob([i],{type:"image/svg+xml;charset=utf-8"}),n=s.createObjectURL(r),a=new Image;a.onload=()=>{e(n)},a.src=n})}cloneSvg(t){return new Promise(e=>{let i=t.cloneNode(!0);e(i)})}svgToImage(t,e,i){this.cloneSvg(t.get().node()).then(s=>this.copyStylesInline(e,s)).then(s=>this.convertToObjectUrl(s)).then(s=>this.triggerDownload(s,i)).catch(()=>{console.log("Failed to save chart as SVG image")})}}/**
 * The file export factory.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class et{constructor(){this._exportClass=null}setExportClass(t){switch(t){case"png":this._exportClass=Q;break;case"svg":this._exportClass=tt;break}}createExport(t){switch(this.setExportClass(t),t){case"png":return new this._exportClass;case"svg":return new this._exportClass}}}/**
 * SVG class
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class it{constructor(t,e){this._element=t.append("svg"),this._defs=new Z(this._element),this._visual=null,this._zoom=null,this._div=null,this._configuration=e,this.init()}init(){this._element.attr("width","100%").attr("height","100%").attr("text-rendering","geometricPrecision").attr("text-anchor","middle").attr("xmlns:xlink","https://www.w3.org/1999/xlink"),new J(this._defs.get())}initEvents(t){this._element.on("contextmenu",i=>i.preventDefault()).on("wheel",i=>{i.ctrlKey||t.show(this._configuration.labels.zoom,300,()=>{t.hide(700,800)})}).on("touchend",i=>{i.touches.length<2&&t.hide(0,800)}).on("touchmove",i=>{i.touches.length>=2?t.hide():t.show(this._configuration.labels.move)}).on("click",i=>this.doStopPropagation(i),!0),this._configuration.rtl&&this._element.classed("rtl",!0);const e=h("div.tooltip");e.empty()?this._div=h("body").append("div").attr("class","tooltip").style("opacity",0):this._div=e.style("opacity",0),this._visual=this._element.append("g"),this._visual.append("g").attr("class","personGroup"),this._zoom=new q(this._visual),this._element.call(this._zoom.get())}doStopPropagation(t){t.defaultPrevented&&t.stopPropagation()}export(t){return new et().createExport(t)}get defs(){return this._defs}get zoom(){return this._zoom}get visual(){return this._visual}get(){return this._element}get div(){return this._div}}const p=Math.PI/180,st=180/Math.PI,rt=Math.PI*2;/**
 * This class handles the geometric methods.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class b{constructor(t){this._configuration=t}get startPi(){return this._configuration.fanDegree===90?0:-(this._configuration.fanDegree/2*p)}get endPi(){return this._configuration.fanDegree===90?this._configuration.fanDegree*p:this._configuration.fanDegree/2*p}get scale(){return E().range([this.startPi,this.endPi])}innerRadius(t){return t===0?0:t<=this._configuration.numberOfInnerCircles?(t-1)*this._configuration.innerArcHeight+this._configuration.centerCircleRadius+this._configuration.circlePadding:this._configuration.numberOfInnerCircles*this._configuration.innerArcHeight+(t-this._configuration.numberOfInnerCircles-1)*this._configuration.outerArcHeight+this._configuration.centerCircleRadius+this._configuration.circlePadding}outerRadius(t){return t===0?this._configuration.centerCircleRadius:t<=this._configuration.numberOfInnerCircles?(t-1)*this._configuration.innerArcHeight+this._configuration.centerCircleRadius+this._configuration.innerArcHeight:this._configuration.numberOfInnerCircles*this._configuration.innerArcHeight+(t-this._configuration.numberOfInnerCircles-1)*this._configuration.outerArcHeight+this._configuration.centerCircleRadius+this._configuration.outerArcHeight}centerRadius(t){return(this.innerRadius(t)+this.outerRadius(t))/2}relativeRadius(t,e){const i=this.outerRadius(t);return i-(100-e)*(i-this.innerRadius(t))/100}calcAngle(t){return Math.max(this.startPi,Math.min(this.endPi,this.scale(t)))}startAngle(t,e){return t===0?0:this.calcAngle(e)}endAngle(t,e){return t===0?rt:this.calcAngle(e)}arcLength(t,e){return(this.endAngle(t.depth,t.x1)-this.startAngle(t.depth,t.x0))*this.relativeRadius(t.depth,e)}}/**
 * The class handles all the text and path elements.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class nt{constructor(t,e){this._svg=t,this._configuration=e,this._geometry=new b(this._configuration)}createLabels(t,e){var i;if(this.isInnerLabel(e)){let s=this.createTextElement(t,e),r=h(t.node().parentNode).attr("id"),n=this.createPathDefinition(r,0,e),a=this.createTextPath(s,n);this.addFirstNames(a,e),this.truncateNames(a,e,0);let o=this.createPathDefinition(r,1,e),c=this.createTextPath(s,o);if(this.addLastNames(c,e),this.truncateNames(c,e,1),((i=e.data.alternativeNames)==null?void 0:i.length)>0){let g=this.createPathDefinition(r,2,e),f=this.createTextPath(s,g).attr("class","alternativeName").classed("rtl",e.data.isAltRtl);this.addAlternativeNames(f,e),this.truncateNames(f,e,2)}let d=this.createPathDefinition(r,3,e),u=this.createTextPath(s,d).attr("class","date");this.addTimeSpan(u,e)}else{if(e.depth>=7){let s=this.createTextElement(t,e).attr("dy","2px");this.addFirstNames(s,e),this.addLastNames(s,e,.25),this.truncateNames(s,e,0)}if(e.depth<7){let s=this.createTextElement(t,e).attr("dy","2px");this.addFirstNames(s,e),this.truncateNames(s,e,0);let r=this.createTextElement(t,e).attr("dy","2px");if(this.addLastNames(r,e),this.truncateNames(r,e,1),e.depth<6){let n=this.createTextElement(t,e).attr("class","date").attr("dy","2px");this.addTimeSpan(n,e)}}this.transformOuterText(t,e)}if(this._configuration.showParentMarriageDates&&e.children&&e.depth<5){let s=this.createTextElement(t,e),r=h(t.node().parentNode).attr("id"),n=this.createPathDefinition(r,4,e),a=this.createTextPath(s,n).attr("class","marriage-date");this.addMarriageDate(a,e)}}addFirstNames(t,e){let i=0;for(let s of e.data.firstNames){let r=t.append("tspan").text(s);s===e.data.preferredName&&r.attr("class","preferred"),i!==0&&r.attr("dx","0.25em"),++i}}addLastNames(t,e,i=0){let s=0;for(let r of e.data.lastNames){let n=t.append("tspan").attr("class","lastName").text(r);s!==0&&n.attr("dx","0.25em"),i!==0&&n.attr("dx",i+"em"),++s}}addAlternativeNames(t,e,i=0){let s=0;for(let r of e.data.alternativeNames){let n=t.append("tspan").text(r);s!==0&&n.attr("dx",(e.data.isAltRtl?-.25:.25)+"em"),++s}}addTimeSpan(t,e){t.append("tspan").text(e.data.timespan)}addMarriageDate(t,e){e.data.parentMarriage&&t.append("tspan").text("⚭ "+e.data.parentMarriage)}truncateNames(t,e,i,s=!1){let r=this.getAvailableWidth(e,i),n=t.selectAll("tspan:not(.preferred):not(.lastName)");n.size()&&n.nodes().reverse().forEach(a=>{h(a).each(this.truncateText(t,r,s))}),t.selectAll("tspan.preferred").each(this.truncateText(t,r,s)),t.selectAll("tspan.lastName").each(this.truncateText(t,r,s))}getTextLength(t){let e=0;return t.selectAll("tspan").each(function(){e+=this.getComputedTextLength()}),e}truncateText(t,e,i=!1){let s=this;return function(){let r=s.getTextLength(t),n=h(this),a=n.text();r>e&&(i?n.text(""):a.length>1&&n.text(a.slice(0,1)+"."))}}isInnerLabel(t){return t.depth>0&&t.depth<=this._configuration.numberOfInnerCircles}createTextElement(t,e){return t.append("text")}createTextPath(t,e){return t.append("textPath").attr("xlink:href","#"+e).attr("startOffset","25%")}createPathDefinition(t,e,i){let s="path-"+t+"-"+e;if(this._svg.defs.get().select("path#"+s).node())return s;let r=this.isPositionFlipped(i.depth,i.x0,i.x1),n=this._geometry.startAngle(i.depth,i.x0),a=this._geometry.endAngle(i.depth,i.x1),o=this._geometry.relativeRadius(i.depth,this.getTextOffset(r,e));this._configuration.showParentMarriageDates&&e===4&&i.depth<1&&(n=this._geometry.calcAngle(i.x0),a=this._geometry.calcAngle(i.x1));let c=w().startAngle(r?a:n).endAngle(r?n:a).innerRadius(o).outerRadius(o);return c.padAngle(this._configuration.padAngle).padRadius(this._configuration.padRadius).cornerRadius(this._configuration.cornerRadius),this._svg.defs.get().append("path").attr("id",s).attr("d",c),s}isPositionFlipped(t,e,i){if(this._configuration.fanDegree!==360||t<=1)return!1;const s=this._geometry.startAngle(t,e),r=this._geometry.endAngle(t,i);return s>=90*p&&r<=180*p||s>=-180*p&&r<=-90*p}getTextOffset(t,e){return t?[23,42,61,84,125][e]:[73,54,35,12,120][e]}getAvailableWidth(t,e){if(t.depth>this._configuration.numberOfInnerCircles)return this._configuration.outerArcHeight-this._configuration.textPadding*2-this._configuration.circlePadding;let i=this._configuration.centerCircleRadius*2-this._configuration.centerCircleRadius*.15;if(t.depth>=1){let s=this.isPositionFlipped(t.depth,t.x0,t.x1);i=this._geometry.arcLength(t,this.getTextOffset(s,e))}return i-this._configuration.textPadding*2-this._configuration.padDistance/2}transformOuterText(t,e){let i=this,s=t.selectAll("text"),r=s.size(),n=1;switch(e.depth){case 0:n=1.5;break;case 1:n=6.5;break;case 2:n=3.5;break;case 3:n=2.2;break;case 4:n=1.9;break;case 5:n=1.5;break;case 6:n=.5;break}let a=E().domain([0,r-1]).range([-n,n]);s.each(function(o,c){const d=a(c)*i._configuration.fontScale/100;e.depth===0?h(this).attr("dy",d*14+14/2+"px"):h(this).attr("transform",function(){let u=e.x1-e.x0,g=i._geometry.scale(e.x0+u/2)*st,f=g-d*(g>0?-1:1),y=i._geometry.centerRadius(e.depth)-i._configuration.colorArcWidth/2;return g>0?f-=90:(y=-y,f+=90),"rotate("+f+") translate("+y+")"})})}}/**
 * This class handles the creation of the person elements of the chart.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class S{constructor(t,e,i,s){this._svg=t,this._configuration=e,this._geometry=new b(this._configuration),this.init(i,s)}init(t,e){if(t.classed("new")&&this._configuration.hideEmptySegments?this.addArcToPerson(t,e):!t.classed("new")&&!t.classed("update")&&!t.classed("remove")&&(e.data.xref!==""||!this._configuration.hideEmptySegments)&&this.addArcToPerson(t,e),e.data.xref!==""){this.addTitleToPerson(t,e.data.name);let i=new nt(this._svg,this._configuration),s=this.addLabelToPerson(t,e);i.createLabels(s,e),this.addColorGroup(t,e),t.on("contextmenu",(r,n)=>{this._svg.div.property("active")?(this._svg.div.transition().duration(200).style("opacity",0),this._svg.div.property("active",!1),r.preventDefault()):(this._svg.div.property("active",!0),this.setTooltipHtml(n),r.preventDefault())}).on("mouseenter",(r,n)=>{n.data.xref===""&&this._svg.div.style("opacity",0),this.setTooltipHtml(n)}).on("mouseleave",(r,n)=>{n.data.xref===""&&this._svg.div.style("opacity",0)}).on("mousemove",(r,n)=>{this._svg.div.style("left",r.pageX+"px").style("top",r.pageY-30+"px")}).on("mouseover",function(r,n){const a=t.nodes(),o=a.indexOf(this);h(a[o]).classed("hover",!0).raise()}).on("mouseout",function(r,n){const a=t.nodes(),o=a.indexOf(this);h(a[o]).classed("hover",!1)})}}setTooltipHtml(t){if(t.data.xref==="")return;const e=t.data.thumbnail?'<img src="'+t.data.thumbnail+'" alt="" />':'<i class="icon-silhouette-'+t.data.sex+'" ></i>',i=t.data.birth||t.data.marriage||t.data.death;this._svg.div.html('<div class="image">'+e+'</div><div class="name">'+t.data.name+"</div>"+(i?"<table>"+(t.data.birth?'<tr class="date"><th>★</th><td>'+t.data.birth+"</td></tr>":"")+(t.data.marriage?'<tr class="date"><th>⚭</th><td>'+t.data.marriage+"</td></tr>":"")+(t.data.death?'<tr class="date"><th>†</th><td>'+t.data.death+"</td></tr>":"")+"</table>":"")).style("left",event.pageX+"px").style("top",event.pageY-30+"px"),this._svg.div.property("active")&&this._svg.div.transition().duration(200).style("opacity",1)}addColorGroup(t,e){let i=w().startAngle(this._geometry.startAngle(e.depth,e.x0)).endAngle(this._geometry.endAngle(e.depth,e.x1)).innerRadius(this._geometry.outerRadius(e.depth)-this._configuration.colorArcWidth).outerRadius(this._geometry.outerRadius(e.depth)+1);i.padAngle(this._configuration.padAngle).padRadius(this._configuration.padRadius),t.append("g").attr("class","color").append("path").attr("fill",()=>this._configuration.showColorGradients?e.depth?"url(#grad-"+e.data.id+")":"rgb(225, 225, 225)":e.data.color).attr("d",i)}addArcToPerson(t,e){let i=w().startAngle(this._geometry.startAngle(e.depth,e.x0)).endAngle(this._geometry.endAngle(e.depth,e.x1)).innerRadius(this._geometry.innerRadius(e.depth)).outerRadius(this._geometry.outerRadius(e.depth));i.padAngle(this._configuration.padAngle).padRadius(this._configuration.padRadius).cornerRadius(this._configuration.cornerRadius);let r=t.append("g").attr("class","arc").append("path").attr("d",i);t.classed("new")&&r.style("opacity",1e-6)}addTitleToPerson(t,e){t.insert("title",":first-child").text(e)}addLabelToPerson(t,e){return t.append("g").attr("class","name").style("font-size",this.getFontSize(e)+"px").style("fill",this._configuration.fontColor)}getFontSize(t){let e=this._configuration.fontSize;return t.depth>=this._configuration.numberOfInnerCircles+1&&(e+=1),(e-t.depth)*this._configuration.fontScale/100}}/**
 * This class handles the gradient coloring.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class at{constructor(t,e){this._svg=t,this._configuration=e,this._geometry=new b(this._configuration)}init(t){if(t.depth<1)return;if(t.depth===1){let i=[64,143,222],s=[161,219,117];t.data.sex===v&&(i=[218,102,13],s=[235,201,33]),t.data.colors=[i,s]}else{let i=[Math.ceil((t.parent.data.colors[0][0]+t.parent.data.colors[1][0])/2),Math.ceil((t.parent.data.colors[0][1]+t.parent.data.colors[1][1])/2),Math.ceil((t.parent.data.colors[0][2]+t.parent.data.colors[1][2])/2)];t.data.sex===_&&(t.data.colors=[t.parent.data.colors[0],i]),t.data.sex===v&&(t.data.colors=[i,t.parent.data.colors[1]])}let e=this._svg.defs.get().append("svg:linearGradient").attr("id","grad-"+t.data.id);e.append("svg:stop").attr("offset","0%").attr("stop-color","rgb("+t.data.colors[0].join(",")+")"),e.append("svg:stop").attr("offset","100%").attr("stop-color","rgb("+t.data.colors[1].join(",")+")")}}/**
 * This class handles the visual update of all text and path elements.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class ot{constructor(t,e,i){this._svg=t,this._configuration=e,this._hierarchy=i}update(t,e){let i=this;this._svg.get().selectAll("g.person").classed("hover",!1).on("click",null).on("mouseover",null).on("mouseout",null),z(t).then(s=>{this._hierarchy.init(s),this._svg.get().selectAll("g.person").data(this._hierarchy.nodes,n=>n.data.id).each(function(n){let a=n.data.xref==="",o=h(this);o.classed("remove",a).classed("update",!a&&o.classed("available")).classed("new",!a&&!o.classed("available")),o.classed("new")||o.selectAll("g.name, g.color, title").classed("old",!0),new S(i._svg,i._configuration,o,n)}),this._svg.get().selectAll("g.person:not(.remove)").selectAll("g.name:not(.old), g.color:not(.old)").style("opacity",1e-6);let r=L().duration(this._configuration.updateDuration).call(this.endAll,()=>this.updateDone(e));this._svg.get().selectAll("g.person.remove g.arc path").transition(r).style("fill",()=>this._configuration.hideEmptySegments?null:"rgb(235, 235, 235)").style("opacity",()=>this._configuration.hideEmptySegments?1e-6:null),this._svg.get().selectAll("g.person.new g.arc path").transition(r).style("fill","rgb(250, 250, 250)").style("opacity",()=>this._configuration.hideEmptySegments?1:null),this._svg.get().selectAll("g.person.update, g.person.remove").selectAll("g.name.old, g.color.old").transition(r).style("opacity",1e-6),this._svg.get().selectAll("g.person:not(.remove)").selectAll("g.name:not(.old), g.color:not(.old)").transition(r).style("opacity",1)})}updateDone(t){this._configuration.hideEmptySegments&&this._svg.get().selectAll("g.person.remove").selectAll("g.arc").remove();let e=O(()=>{this._svg.get().selectAll("g.person g.arc path").attr("style",null),this._svg.get().selectAll("g.person g.name, g.person g.color").style("opacity",null),e.stop()},10);this._svg.get().selectAll("g.person.new, g.person.update, g.person.remove").classed("new",!1).classed("update",!1).classed("remove",!1).selectAll("g.name.old, g.color.old, title.old").remove(),this._svg.get().selectAll("g.person.available").classed("available",!1),t()}endAll(t,e){let i=0;t.on("start",()=>++i).on("end",()=>{--i||e.apply(t)})}}const lt=500,m=10;/**
 * This class handles the overall chart creation.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class ht{constructor(t,e){this._configuration=e,this._parent=t,this._hierarchy=new X(this._configuration),this._data={}}get svg(){return this._svg}updateViewBox(){let t=this._svg.visual.node().getBBox(),e=this._parent.node().getBoundingClientRect(),i=Math.max(e.width,t.width),s=Math.max(e.height,t.height,lt),r=(i-t.width)/2,n=(s-t.height)/2,a=Math.ceil(t.x-r-m),o=Math.ceil(t.y-n-m);i=Math.ceil(i+m*2),s=Math.ceil(s+m*2),this._svg.get().attr("viewBox",[a,o,i,s])}get data(){return this._data}set data(t){this._data=t,this._hierarchy.init(this._data)}draw(){this._parent.html(""),this._svg=new it(this._parent,this._configuration),this._overlay=new K(this._parent),this._svg.initEvents(this._overlay);let t=this._svg.get().select("g.personGroup"),e=new at(this._svg,this._configuration),i=this;t.selectAll("g.person").data(this._hierarchy.nodes,s=>s.data.id).enter().append("g").attr("class","person").attr("id",s=>"person-"+s.data.id),t.selectAll("g.person").each(function(s){let r=h(this);i._configuration.showColorGradients&&e.init(s),new S(i._svg,i._configuration,r,s)}),this.bindClickEventListener(),this.updateViewBox()}bindClickEventListener(){this._svg.get().select("g.personGroup").selectAll("g.person").filter(e=>e.data.xref!=="").classed("available",!0).on("click",this.personClick.bind(this))}personClick(t,e){e.depth===0?this.redirectToIndividual(e.data.url):this.update(e.data.updateUrl)}redirectToIndividual(t){window.location=t}update(t){new ot(this._svg,this._configuration,this._hierarchy).update(t,()=>this.bindClickEventListener())}}/**
 * The application class.
 *
 * @author  Rico Sonntag <mail@ricosonntag.de>
 * @license https://opensource.org/licenses/GPL-3.0 GNU General Public License v3.0
 * @link    https://github.com/magicsunday/webtrees-fan-chart/
 */class ct{constructor(t,e){this._selector=t,this._parent=h(this._selector),this._configuration=new Y(e.labels,e.generations,e.fanDegree,e.defaultColor,e.fontScale,e.fontColor,e.hideEmptySegments,e.showColorGradients,e.showParentMarriageDates,e.rtl,e.innerArcs),this._chart=new ht(this._parent,this._configuration),this.init()}init(){h("#centerButton").on("click",()=>this.center()),h("#exportPNG").on("click",()=>this.exportPNG()),h("#exportSVG").on("click",()=>this.exportSVG())}center(){this._chart.svg.get().transition().duration(750).call(this._chart.svg.zoom.get().transform,B)}get configuration(){return this._configuration}set cssFile(t){this._cssFile=t}draw(t){this._chart.data=t,this._chart.draw()}exportPNG(){this._chart.svg.export("png").svgToImage(this._chart.svg,"fan-chart.png")}exportSVG(){this._chart.svg.export("svg").svgToImage(this._chart.svg,this._cssFile,"fan-chart.svg")}}const dt={layout:"auth",meta:{title:"Fanchart - Show"},components:{vSelect:H,Loading:j},data:()=>({familyData:{},persons:[],selected_person:{},data:{},isLoading:!1,color:"#4fcf8d",backgroundColor:"#ffffff",generation:{label:1,value:1},thumbnail_man:"/images/thumbnail-man.svg",thumbnail_woman:"/images/thumbnail-woman.svg"}),methods:{async fetchData(){if(!this.selected_person.value)return;let l={start_id:this.selected_person.value,generation:this.generation.value};this.$axios.$get("/api/trees/show",{params:l}).then(t=>{this.data=t,this.familyData=this.checkFamilyData(),new ct("#webtrees-fan-chart-container",{labels:{zoom:"Use Ctrl + scroll to zoom in the view",move:"Move the view with two fingers"},defaultColor:"#0000FF",fanDegree:360,fontColor:"#000",generations:this.generation.value,rtl:"rtl",showColorGradients:!0,showEmptyBoxes:!0,treeLayout:"right"}).draw(this.familyData)})},checkBirthDeathDate(l,t){return t?l?`${l.toString().slice(0,4)}-${t.toString().slice(0,4)}`:"":l?`Born ${l.toString().slice(0,4)}`:""},getPersons(){this.isLoading=!0,this.$axios.$get("/api/persons").then(l=>{this.persons=l.map(t=>{const e=t.birth_year?`${t.name} (${t.birth_year})`:t.birthday?`${t.name} (${new Date(t.birthday).getFullYear()})`:t.name;return{...t,displayname:e}}),this.isLoading=!1})},checkChildren(l){var i,s;let t=[],e=[];if((i=this.data.persons[l].own_unions)==null||i.forEach(r=>{this.data.unions[r]&&this.data.unions[r].children.forEach(n=>{e.push(n)})}),!!e.length)return(s=this.data.persons[l].own_unions)==null||s.forEach(r=>{var n;(n=this.data.unions[r])==null||n.children.forEach(a=>{let o=this.data.persons[a];t.push({id:o.id,name:o.name,title:o.titl,firstNames:[o.name],lastNames:[""],generation:o.generation,sex:o.sex?o.sex:"M",xref:1,birth:o.birthday?o.birthday:o.birth_year,death:o.deathday?o.deathday:o.death_year,timespan:this.checkBirthDeathDate(o.birthday?o.birthday:o.birth_year,o.deathday?o.deathday:o.death_year),children:this.checkChildren(a)})})}),t},checkParents(l){const t=[];return this.data.persons[l],console.log("data: ",this.data),Object.values(this.data.unions).filter(s=>{const r=s.children;let n=!1;return r.forEach(a=>{a==l&&(n=!0)}),n}).forEach(s=>{var r;(r=s.partner)==null||r.forEach(n=>{const a=this.data.persons[n];t.push({id:a.id,name:a.name,title:a.titl,firstNames:[P(a)],lastNames:[""],generation:a.generation,sex:a.sex?a.sex:"M",xref:1,birth:$(a),death:W(a),timespan:this.checkBirthDeathDate(a.birthday?a.birthday:a.birth_year,a.deathday?a.deathday:a.death_year),thumbnail:a.sex?a.sex=="F"?this.thumbnail_woman:this.thumbnail_man:thumbnail_middle,children:this.checkParents(n)})})}),t.length==0?null:t},checkFamilyData(l=null){const t=l?this.data.persons[l]:this.data.persons[this.data.start];return{id:t.id,name:t.name,title:t.titl,firstNames:[P(t)],lastNames:[""],generation:t.generation,sex:t.sex?t.sex:"M",xref:1,birth:t.birthday?t.birthday:t.birth_year,death:t.deathday?t.deathday:t.death_year,timespan:this.checkBirthDeathDate(t.birthday?t.birthday:t.birth_year,t.deathday?t.deathday:t.death_year),children:this.checkParents(this.data.start)}}},mounted(){this.getPersons()}},gt={class:"select-box"},ut=N("div",{style:{height:"700px"},id:"webtrees-fan-chart-container"},null,-1);function ft(l,t,e,i,s,r){const n=A("loading"),a=A("v-select");return U(),V("div",null,[x(n,{active:l.isLoading,color:l.color,"background-color":l.backgroundColor},null,8,["active","color","background-color"]),N("div",gt,[x(a,{style:{width:"100%"},modelValue:l.selected_person,"onUpdate:modelValue":t[0]||(t[0]=o=>l.selected_person=o),options:l.persons.map(o=>o={label:o.displayname,value:o.id}),onInput:r.fetchData},null,8,["modelValue","options","onInput"]),x(a,{style:{width:"100px"},modelValue:l.generation,"onUpdate:modelValue":t[1]||(t[1]=o=>l.generation=o),options:Array.from(Array(10).keys()).map(o=>o={label:o,value:o}),onInput:r.fetchData},null,8,["modelValue","options","onInput"])]),ut])}const bt=F(dt,[["render",ft]]);export{bt as default};
